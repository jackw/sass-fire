@import 'init';
@import 'last';
@import 'head';
@import 'tail';

/// Performs right-to-left function composition. The right most parameter is the input
///
/// @group function
/// @param {Function...} params... The functions and input to compose
/// @return {*}
/// @see pipe
///
/// @example scss - compose
///
///   $input: ('a', 'b', 'c');
///   $output: compose(
///     (implode, '-'),
///     (join, ('d', 'e')),
///     $input);
///   @debug $output; //=> 'd-e-a-b-c'

@function compose($params...) {
    $function-list: init($params);
    $result: last($params);

    @for $i from length($function-list) * -1 through -1 {
        $function: nth($function-list, abs($i));
        $result: _run-function-with-params($function, $result);
    }

    @return $result;
}

@function _run-function-with-params($function, $input) {
    $fn: if(type-of($function) == 'list', head($function), $function);
    @if type-of($function) == 'list' or type-of($function) == 'arglist' {
        $input: append(tail($function), $input);
    }
    @if function-exists($fn) {
        @return call(get-function($fn), $input...);
    } @else {
        @return $input;
    }
}
