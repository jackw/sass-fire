@use "sass:list";
@use "sass:math";
@use 'mean';
@use 'slice';

/// Returns the median average of the given list of numbers.
///
/// @group math
/// @param {List} list
/// @return {Number}
///
/// @example scss - median
///
///   $median-average: median(12, 5, 17, 1, 7);
///   @debug $median-average; //=> 7

@function median($list...) {
    $length: list.length($list);
    $sorted-list: __sort-list-of-numbers($list);
    $width: 2 - $length % 2;
    $idx: ($length - $width) / 2;
    // compensate for list index starting at 1
    $result: slice.slice($idx + 1, ($idx + $width), $sorted-list);

    @if list.length($result) == 1 {
        @return list.nth($result, 1);
    } @else {
        @return mean.mean($result...);
    }
}

@function __sort-list-of-numbers($list) {
    $order: 0 1 2 3 4 5 6 7 8 9;
    $less: ();
    $equal: ();
    $large: ();

    @if list.length($list) > 1 {
        $seed: list.nth($list, math.ceil(list.length($list) / 2));

        @each $item in $list {
            @if ($item == $seed) {
                $equal: list.append($equal, $item);
            } @else if ($item < $seed) {
                $less: list.append($less, $item);
            } @else if ($item > $seed) {
                $large: list.append($large, $item);
            }
        }

        @return list.join(
            list.join(__sort-list-of-numbers($less), $equal),
            __sort-list-of-numbers($large)
        );
    }

    @return $list;
}
