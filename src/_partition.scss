/// Takes a predicate and a list and returns a pair of filterable lists of the same type of
/// elements which do and do not satisfy, the predicate, respectively.
///
/// @group list
/// @param {Function} pred A predicate to determine which side the element belongs to.
/// @param {Array} filterable the list to partition.
/// @return {Array} An array, containing first the subset of elements that satisfy the
///  predicate, and second the subset of elements that do not satisfy.
/// @see filter
/// @see reject
///
/// @example scss - partition
///
///   @function is-even($n) { @return $n % 2 == 0; }
///
///   $even-n-odd: partition(is-even, (1, 2, 3, 4));
///   @debug $even-n-odd; //=> ((2 4), (1 3))

@function partition($pred, $filterable) {
    $satisfy: ();
    $dissatisfy: ();
    @each $item in $filterable {
        $truthy: call(get-function($pred), $item);
        @if $truthy {
            $satisfy: append($satisfy, $item);
        } @else {
            $dissatisfy: append($dissatisfy, $item);
        }
    }
    @return ($satisfy, $dissatisfy);
}
