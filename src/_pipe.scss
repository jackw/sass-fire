@import 'init';
@import 'last';
@import 'head';
@import 'tail';

/// Performs left-to-right function composition.
///
/// @group function
/// @param {Function...} functions... The functions to compose
/// @return {Function}
/// @see compose
///
/// @example scss - pipe
///
///   $input: ('a', 'b', 'c');
///   $output: pipe(
///     (join, ('d', 'e')),
///     (implode, '-'),
///     $input);
///   @debug $output; //=> 'd-e-a-b-c'

@function pipe($params...) {
    $function-list: init($params);
    $result: last($params);

    @each $function in $function-list {
        $result: _run-function-with-params($function, $result);
    }

    @return $result;
}

@function _run-function-with-params($function, $input) {
    $fn: if(type-of($function) == 'list', head($function), $function);
    @if type-of($function) == 'list' or type-of($function) == 'arglist' {
        $input: append(tail($function), $input);
    }
    @if function-exists($fn) {
        @return call(get-function($fn), $input...);
    } @else {
        @return $input;
    }
}
