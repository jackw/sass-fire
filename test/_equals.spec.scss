@import 'true';
@import '../src/equals';

@include describe('equals [function]') {
    @include it('should handle numbers ') {
        @include assert-true(equals(1px, 1px));
        @include assert-false(equals(1px, 1em));
        @include assert-false(equals(1, 1px));
        @include assert-true(equals(96px, 1in));
    }
    @include it('should handle strings') {
        @include assert-true(equals('Helvetica', Helvetica));
        @include assert-false(equals('Helvetica', 'Arial'));
    }
    @include it('should handle colors') {
        @include assert-true(equals(#c30c30, #c30c30));
        @include assert-true(equals(hsl(34, 35%, 92.1%), #f2ece4));
        @include assert-false(
            equals(rgba(179, 115, 153, 0.5), rgba(179, 115, 153, 0.8))
        );
    }
    @include it('should handle measurements') {
        @include assert-true(equals((5px 7px 10px), (5px 7px 10px)));
        @include assert-false(equals((5px 7px 10px), (10px 14px 20px)));
        @include assert-false(equals((5px 7px 10px), (5px, 7px, 10px)));
        @include assert-false(equals((5px 7px 10px), [5px 7px 10px]));
    }
    @include it('should handle maps') {
        $theme: (
            'venus': #998099,
            'nebula': #d2e1dd,
        );

        @include assert-true(
            equals(
                $theme,
                (
                    'venus': #998099,
                    'nebula': #d2e1dd,
                )
            )
        );
        @include assert-false(
            equals(
                $theme,
                (
                    'venus': #998099,
                    'iron': #dadbdf,
                )
            )
        );
    }
    @include it('should handle booleans') {
        @include assert-true(equals(true, true));
        @include assert-false(equals(true, false));
        @include assert-false(equals(null, false));
    }
    @include it('should handle functions') {
        @include assert-true(
            equals(get-function('rgba'), get-function('rgba'))
        );
        @include assert-false(
            equals(get-function('rgba'), get-function('hsla'))
        );
    }
}
