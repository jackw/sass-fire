@import 'true';
@import '../src/path-satisfies';

@function __path-satisfies-spec-is-positive($n) {
    @return $n > 0;
}

@function __path-satisfies-spec-has-key-y($map) {
    @return map-has-key($map, 'y');
}

@function __path-satisfies-spec-is-map($map) {
    @return type-of($map) == 'map';
}

@include describe('path-satisfies [function]') {
    @include it(
        'returns true if the specified object path satisfies the given predicate'
    ) {
        @include assert-equal(
            path-satisfies(
                __path-satisfies-spec-is-positive,
                ('x', 2, 'y'),
                (
                    x: (
                        (y: -1),
                        (y: 1),
                    ),
                )
            ),
            true
        );
    }

    @include it('returns false if the specified path does not exist') {
        @include assert-equal(
            path-satisfies(
                __path-satisfies-spec-is-positive,
                ('x', 'y'),
                (
                    x: (
                        z: 42,
                    ),
                )
            ),
            false
        );
    }

    @include it('handles empty paths by applying pred to data: positive') {
        @include assert-equal(
            path-satisfies(
                __path-satisfies-spec-is-map,
                (),
                (
                    x: (
                        z: 42,
                    ),
                )
            ),
            true
        );
    }

    @include it('handles empty paths by applying pred to data: negative') {
        @include assert-equal(
            path-satisfies(
                __path-satisfies-spec-has-key-y,
                (),
                (
                    x: (
                        z: 42,
                    ),
                )
            ),
            false
        );
    }

    @include it('returns false otherwise') {
        @include assert-equal(
            path-satisfies(
                __path-satisfies-spec-is-positive,
                ('x', 'y'),
                (
                    x: (
                        y: 0,
                    ),
                )
            ),
            false
        );
    }
}
